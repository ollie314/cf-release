#!/bin/bash -l

set -e -x

export GOROOT=$(readlink -nf /var/vcap/packages/golang1.6)
export PATH=${GOROOT}/bin:${PATH}

export PATH=/var/vcap/packages/cli/bin:${PATH} # put the cli on the path

export GOPATH=/var/vcap/packages/acceptance-tests
export PATH=${GOPATH}/bin:${PATH}

export CF_COLOR=false
export CONFIG=/var/vcap/jobs/acceptance-tests/bin/config.json

mkdir -p /var/vcap/sys/log/acceptance_tests
rm -rf /var/vcap/sys/log/acceptance_tests/*

cd /var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry/cf-acceptance-tests

echo '################################################################################################################'
echo $(go version)
echo CONFIG=$CONFIG
env | sort
echo '################################################################################################################'

echo "Running acceptance tests..."

EXITSTATUS=0

nodes=<%= properties.acceptance_tests.nodes %>

skipPackages="-skipPackage=helpers,"
skipPackages+=<%= properties.acceptance_tests.include_diego_ssh ? "" : "ssh," %>
skipPackages+=<%= properties.acceptance_tests.include_diego_docker ? "" : "docker," %>
skipPackages+=<%= properties.acceptance_tests.include_backend_compatibility ? "" : "backend_compatibility," %>
skipPackages+=<%= properties.acceptance_tests.include_v3 ? "" : "v3," %>
skipPackages+=<%= properties.acceptance_tests.include_security_groups ? "" : "security_groups," %>
skipPackages+=<%= properties.acceptance_tests.include_logging ? "" : "logging," %>
skipPackages+=<%= properties.acceptance_tests.include_operator ? "" : "operator," %>
skipPackages+=<%= properties.acceptance_tests.include_internet_dependent ? "" : "internet_dependent," %>
skipPackages+=<%= properties.acceptance_tests.include_services ? "" : "services," %>
skipPackages+=<%= properties.acceptance_tests.include_route_services ? "" : "route_services," %>
[[ $skipPackages == *, ]] && skipPackages=${skipPackages%?} # strip trailing comma

<% skips = [] %>
<% skips.push("SSO") unless properties.acceptance_tests.include_sso %>
<%
case p("acceptance_tests.backend")
when "diego"
  skips.push("NO_DIEGO_SUPPORT")
when "dea"
  skips.push("NO_DEA_SUPPORT")
else
  skips.push("NO_DIEGO_SUPPORT")
  skips.push("NO_DEA_SUPPORT")
end
%>
<% if_p("acceptance_tests.skip_regex") { skips.push properties.acceptance_tests.skip_regex } %>
skips=<%= skips.empty? ? "" : %Q[-skip="#{skips.join("|")}"] %>

verbose=<%= properties.acceptance_tests.verbose ? "-v" : "" %>
noColorFlag=<%= properties.acceptance_tests.enable_color ? "" : "-noColor" %>

set +e
bin/test -r $noColorFlag -slowSpecThreshold=120 -randomizeAllSpecs $verbose \
  -nodes=$nodes $skipPackages $skips -keepGoing \
  > /var/vcap/sys/log/acceptance_tests.log \
  2> /var/vcap/sys/log/acceptance_tests.err.log
EXITSTATUS=$?
set -e
tail -c 991232 /var/vcap/sys/log/acceptance_tests.log

echo "Acceptance Tests Complete; exit status: $EXITSTATUS"

for i in /var/vcap/sys/log/acceptance_tests/*; do
  if [ -e "$i" ]
  then
    mv $i $i.log #Â needed to make download-logs work
  fi
done

exit $EXITSTATUS
