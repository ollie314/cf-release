<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end

  config = {
    :api => properties.acceptance_tests.api,
    :apps_domain => Array(properties.acceptance_tests.apps_domain).first,
    :admin_user => properties.acceptance_tests.admin_user,
    :admin_password => properties.acceptance_tests.admin_password,
    :skip_ssl_validation => properties.acceptance_tests.skip_ssl_validation,
    :artifacts_directory => "/var/vcap/sys/log/acceptance_tests/",
    :syslog_drain_port => 1234,
    :syslog_ip_address => discover_external_ip,
    :backend => properties.acceptance_tests.backend,
    :include_tasks => properties.acceptance_tests.include_tasks,
    :use_http => properties.acceptance_tests.use_http,
    :existing_user => properties.acceptance_tests.existing_user,
    :existing_user_password => properties.acceptance_tests.existing_user_password,
    :use_existing_user => !properties.acceptance_tests.existing_user.nil?,
    :keep_user_at_suite_end => !properties.acceptance_tests.existing_user.nil?,
    :include_apps => properties.acceptance_tests.include_apps,
    :include_sso => properties.acceptance_tests.include_sso,
    :include_backend_compatibility => properties.acceptance_tests.include_backend_compatibility,
    :include_detect => properties.acceptance_tests.include_detect,
    :include_docker => properties.acceptance_tests.include_diego_docker,
    :include_internet_dependent => properties.acceptance_tests.include_internet_dependent,
    :include_route_services => properties.acceptance_tests.include_route_services,
    :include_routing => properties.acceptance_tests.include_routing,
    :include_security_groups => properties.acceptance_tests.include_security_groups,
    :include_services => properties.acceptance_tests.include_services,
    :include_ssh => properties.acceptance_tests.include_diego_ssh,
    :include_v3 => properties.acceptance_tests.include_v3
  }

  config[:default_timeout] = properties.acceptance_tests.default_timeout if properties.acceptance_tests.default_timeout
  config[:cf_push_timeout] = properties.acceptance_tests.cf_push_timeout if properties.acceptance_tests.cf_push_timeout
  config[:long_curl_timeout] = properties.acceptance_tests.long_curl_timeout if properties.acceptance_tests.long_curl_timeout
  config[:broker_start_timeout] = properties.acceptance_tests.broker_start_timeout if properties.acceptance_tests.broker_start_timeout
  config[:async_service_operation_timeout] = properties.acceptance_tests.async_service_operation_timeout if properties.acceptance_tests.async_service_operation_timeout

  config[:staticfile_buildpack_name] = properties.acceptance_tests.staticfile_buildpack_name if properties.acceptance_tests.staticfile_buildpack_name
  config[:java_buildpack_name] = properties.acceptance_tests.java_buildpack_name if properties.acceptance_tests.java_buildpack_name
  config[:ruby_buildpack_name] = properties.acceptance_tests.ruby_buildpack_name if properties.acceptance_tests.ruby_buildpack_name
  config[:nodejs_buildpack_name] = properties.acceptance_tests.nodejs_buildpack_name if properties.acceptance_tests.nodejs_buildpack_name
  config[:go_buildpack_name] = properties.acceptance_tests.go_buildpack_name if properties.acceptance_tests.go_buildpack_name
  config[:python_buildpack_name] = properties.acceptance_tests.python_buildpack_name if properties.acceptance_tests.python_buildpack_name
  config[:php_buildpack_name] = properties.acceptance_tests.php_buildpack_name if properties.acceptance_tests.php_buildpack_name
  config[:binary_buildpack_name] = properties.acceptance_tests.binary_buildpack_name if properties.acceptance_tests.binary_buildpack_name

  config[:persistent_app_host] = properties.acceptance_tests.persistent_app_host if properties.acceptance_tests.persistent_app_host
  config[:persistent_app_space] = properties.acceptance_tests.persistent_app_space if properties.acceptance_tests.persistent_app_space
  config[:persistent_app_org] = properties.acceptance_tests.persistent_app_org if properties.acceptance_tests.persistent_app_org
  config[:persistent_app_quota_name] = properties.acceptance_tests.persistent_app_quota_name if properties.acceptance_tests.persistent_app_quota_name

  config[:include_privileged_container_support] = properties.acceptance_tests.include_privileged_container_support if properties.acceptance_tests.include_privileged_container_support
%>

<%= JSON.pretty_generate(config) %>
